# Define colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
MAGENTA='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

echo " "
echo -e "${CYAN}*peeks at your commit message* W-what are you trying to write here? I better check it...${NC}"

npx --no -- commitlint --edit ${1} || {
  echo " "
  echo -e "${RED}B-baka! That's not how you write a commit message! *pouts*${NC}"
  echo -e "${YELLOW}It should be like this:${NC}"
  echo -e "${BLUE}feat: ✨ add new feature${NC}"
  echo -e "${BLUE}fix: 🐛 resolve issue${NC}"
  echo -e "${BLUE}docs: 📝 update readme${NC}"
  echo -e " "
  echo -e "${RED}Got it? It's not like I'm helping you because I want to or anything...${NC}"
  echo " "
  exit 1
}

# Get the commit message
commit_msg=$(cat "$1")

echo " "
# Check if commit message contains emoji or gitmoji shortcode
if echo "$commit_msg" | grep -qE "^(:[a-zA-Z0-9_+-]+:|[\p{Emoji_Presentation}\p{Extended_Pictographic}])" 2>/dev/null; then
  echo -e "${GREEN}Uwaa~ Your commit message is so kawaii with that emoji! *sparkly eyes* ...I mean, it's acceptable!${NC}"
else
  echo -e "${GREEN}Hmph! Your commit message is... acceptable. Though it could use some emoji... *pouts*${NC}"
fi
echo " " 